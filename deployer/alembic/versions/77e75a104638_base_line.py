"""base_line

Revision ID: 77e75a104638
Revises:
Create Date: 2025-08-22 13:49:31.532574

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "77e75a104638"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "daemon",
        sa.Column("id", sa.VARCHAR(length=128), nullable=False),
        sa.Column("account_id", sa.VARCHAR(length=128), nullable=False),
        sa.Column("org_id", sa.VARCHAR(length=256), nullable=False),
        sa.Column("service_id", sa.VARCHAR(length=256), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "INIT",
                "READY_TO_START",
                "STARTING",
                "RESTARTING",
                "DELETING",
                "UP",
                "DOWN",
                "ERROR",
                name="daemonstatus",
            ),
            nullable=False,
        ),
        sa.Column("from_date", sa.TIMESTAMP(), nullable=False),
        sa.Column("end_date", sa.TIMESTAMP(), nullable=False),
        sa.Column("daemon_config", sa.JSON(), nullable=False),
        sa.Column("service_published", sa.BOOLEAN(), nullable=False),
        sa.Column("daemon_endpoint", sa.VARCHAR(length=256), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("org_id", "service_id", name="uq_org_srvc"),
    )
    op.create_table(
        "transactions_metadata",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("recipient", sa.VARCHAR(length=128), nullable=False),
        sa.Column("last_block_no", sa.Integer(), nullable=False),
        sa.Column("fetch_limit", sa.Integer(), nullable=False),
        sa.Column("block_adjustment", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "claiming_period",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("daemon_id", sa.VARCHAR(length=128), nullable=False),
        sa.Column("start_on", sa.TIMESTAMP(), nullable=False),
        sa.Column("end_on", sa.TIMESTAMP(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "INACTIVE", "FAILED", name="claimingperiodstatus"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["daemon_id"], ["daemon.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_claiming_period_daemon_id"), "claiming_period", ["daemon_id"], unique=False
    )
    op.create_table(
        "order",
        sa.Column("id", sa.VARCHAR(length=128), nullable=False),
        sa.Column("daemon_id", sa.VARCHAR(length=128), nullable=False),
        sa.Column(
            "status", sa.Enum("PROCESSING", "SUCCESS", "FAILED", name="orderstatus"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["daemon_id"], ["daemon.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_order_daemon_id"), "order", ["daemon_id"], unique=False)
    op.create_table(
        "evm_transaction",
        sa.Column("hash", sa.VARCHAR(length=128), nullable=False),
        sa.Column("order_id", sa.VARCHAR(length=128), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SUCCESS", "FAILED", name="evmtransactionstatus"),
            nullable=False,
        ),
        sa.Column("sender", sa.VARCHAR(length=128), nullable=False),
        sa.Column("receiver", sa.VARCHAR(length=128), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["order_id"], ["order.id"], onupdate="CASCADE", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("hash"),
    )
    op.create_index(
        op.f("ix_evm_transaction_order_id"), "evm_transaction", ["order_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_evm_transaction_order_id"), table_name="evm_transaction")
    op.drop_table("evm_transaction")
    op.drop_index(op.f("ix_order_daemon_id"), table_name="order")
    op.drop_table("order")
    op.drop_index(op.f("ix_claiming_period_daemon_id"), table_name="claiming_period")
    op.drop_table("claiming_period")
    op.drop_table("transactions_metadata")
    op.drop_table("daemon")
    # ### end Alembic commands ###
