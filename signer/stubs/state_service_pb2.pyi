"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ChannelStateRequest(google.protobuf.message.Message):
    """ChanelStateRequest is a request for channel state."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANNEL_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    CURRENT_BLOCK_FIELD_NUMBER: builtins.int
    channel_id: builtins.bytes
    """channel_id contains id of the channel which state is requested."""
    signature: builtins.bytes
    """signature is a client signature of the message which contains
    channel_id. It is used for client authorization.
    """
    current_block: builtins.int
    """current block number (signature will be valid only for short time around this block number)"""
    def __init__(
        self,
        *,
        channel_id: builtins.bytes = ...,
        signature: builtins.bytes = ...,
        current_block: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["channel_id", b"channel_id", "current_block", b"current_block", "signature", b"signature"]) -> None: ...

global___ChannelStateRequest = ChannelStateRequest

@typing.final
class ChannelStateReply(google.protobuf.message.Message):
    """ChannelStateReply message contains a latest channel state. current_nonce and
    current_value fields can be different from ones stored in the blockchain if
    server started withdrawing funds froms channel but transaction is still not
    finished.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CURRENT_NONCE_FIELD_NUMBER: builtins.int
    CURRENT_SIGNED_AMOUNT_FIELD_NUMBER: builtins.int
    CURRENT_SIGNATURE_FIELD_NUMBER: builtins.int
    OLD_NONCE_SIGNED_AMOUNT_FIELD_NUMBER: builtins.int
    OLD_NONCE_SIGNATURE_FIELD_NUMBER: builtins.int
    PLANNED_AMOUNT_FIELD_NUMBER: builtins.int
    USED_AMOUNT_FIELD_NUMBER: builtins.int
    current_nonce: builtins.bytes
    """current_nonce is a latest nonce of the payment channel."""
    current_signed_amount: builtins.bytes
    """current_signed_amount is a last amount which were signed by client with current_nonce
    it could be absent if none message was signed with current_nonce
    """
    current_signature: builtins.bytes
    """current_signature is a last signature sent by client with current_nonce
    it could be absent if none message was signed with current nonce
    """
    old_nonce_signed_amount: builtins.bytes
    """last amount which was signed by client with nonce=current_nonce - 1"""
    old_nonce_signature: builtins.bytes
    """last signature sent by client with nonce = current_nonce - 1"""
    planned_amount: builtins.int
    """If the client / user chooses to sign upfront , the planned amount in cogs will be indicative of this.
    For pay per use, this will be zero
    """
    used_amount: builtins.int
    """If the client / user chooses to sign upfront , the usage amount in cogs will be indicative of how much of the
    planned amount has actually been used.
    For pay per use, this will be zero
    """
    def __init__(
        self,
        *,
        current_nonce: builtins.bytes = ...,
        current_signed_amount: builtins.bytes = ...,
        current_signature: builtins.bytes = ...,
        old_nonce_signed_amount: builtins.bytes = ...,
        old_nonce_signature: builtins.bytes = ...,
        planned_amount: builtins.int = ...,
        used_amount: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["current_nonce", b"current_nonce", "current_signature", b"current_signature", "current_signed_amount", b"current_signed_amount", "old_nonce_signature", b"old_nonce_signature", "old_nonce_signed_amount", b"old_nonce_signed_amount", "planned_amount", b"planned_amount", "used_amount", b"used_amount"]) -> None: ...

global___ChannelStateReply = ChannelStateReply

@typing.final
class GetFreeCallTokenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDRESS_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    CURRENT_BLOCK_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    TOKEN_LIFETIME_IN_BLOCKS_FIELD_NUMBER: builtins.int
    address: builtins.str
    """required for all calls"""
    signature: builtins.bytes
    """ ("__prefix_free_trial", address, user_id, organization_id, service_id, group_id, current_block)"""
    current_block: builtins.int
    user_id: builtins.str
    """only for calls for trusted signers"""
    token_lifetime_in_blocks: builtins.int
    """Duration of the token's validity, measured in blocks.
    For example, if the average block time is ~12 seconds, then 100 blocks â‰ˆ 20 minutes.
    Max value: 172800
    """
    def __init__(
        self,
        *,
        address: builtins.str = ...,
        signature: builtins.bytes = ...,
        current_block: builtins.int = ...,
        user_id: builtins.str | None = ...,
        token_lifetime_in_blocks: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_token_lifetime_in_blocks", b"_token_lifetime_in_blocks", "_user_id", b"_user_id", "token_lifetime_in_blocks", b"token_lifetime_in_blocks", "user_id", b"user_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_token_lifetime_in_blocks", b"_token_lifetime_in_blocks", "_user_id", b"_user_id", "address", b"address", "current_block", b"current_block", "signature", b"signature", "token_lifetime_in_blocks", b"token_lifetime_in_blocks", "user_id", b"user_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_token_lifetime_in_blocks", b"_token_lifetime_in_blocks"]) -> typing.Literal["token_lifetime_in_blocks"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_user_id", b"_user_id"]) -> typing.Literal["user_id"] | None: ...

global___GetFreeCallTokenRequest = GetFreeCallTokenRequest

@typing.final
class FreeCallToken(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    TOKEN_HEX_FIELD_NUMBER: builtins.int
    TOKEN_EXPIRATION_BLOCK_FIELD_NUMBER: builtins.int
    token: builtins.bytes
    """Token with expiration block encoded in the format: <signature>_<blockNumber>
    Example: [binary signature][0x5f][ascii decimal block number]
    """
    token_hex: builtins.str
    """Hex-encoded representation of the `token` field"""
    token_expiration_block: builtins.int
    """token_expiration_block = currentBlock + token_lifetime_in_blocks (deadline block)"""
    def __init__(
        self,
        *,
        token: builtins.bytes = ...,
        token_hex: builtins.str = ...,
        token_expiration_block: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["token", b"token", "token_expiration_block", b"token_expiration_block", "token_hex", b"token_hex"]) -> None: ...

global___FreeCallToken = FreeCallToken

@typing.final
class FreeCallStateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDRESS_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    FREE_CALL_TOKEN_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    CURRENT_BLOCK_FIELD_NUMBER: builtins.int
    address: builtins.str
    user_id: builtins.str
    """optional, specify if you trusted signer"""
    free_call_token: builtins.bytes
    """Previously issued token from GetFreeCallToken"""
    signature: builtins.bytes
    """Signature is made up of the below, user signs with the private key corresponding with the public key used to generate the authorized token
    ("__prefix_free_trial", address, user_id, organization_id, service_id, group_id, current_block, token)
    """
    current_block: builtins.int
    """current block number (signature will be valid only for short time around this block number)"""
    def __init__(
        self,
        *,
        address: builtins.str = ...,
        user_id: builtins.str | None = ...,
        free_call_token: builtins.bytes = ...,
        signature: builtins.bytes = ...,
        current_block: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_user_id", b"_user_id", "user_id", b"user_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_user_id", b"_user_id", "address", b"address", "current_block", b"current_block", "free_call_token", b"free_call_token", "signature", b"signature", "user_id", b"user_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_user_id", b"_user_id"]) -> typing.Literal["user_id"] | None: ...

global___FreeCallStateRequest = FreeCallStateRequest

@typing.final
class FreeCallStateReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FREE_CALLS_AVAILABLE_FIELD_NUMBER: builtins.int
    free_calls_available: builtins.int
    """number of free calls available"""
    def __init__(
        self,
        *,
        free_calls_available: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["free_calls_available", b"free_calls_available"]) -> None: ...

global___FreeCallStateReply = FreeCallStateReply
